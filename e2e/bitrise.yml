format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
        [
            {
                "created_at": "2025-03-07T12:58:39.707654Z",
                "finished_at": "2025-03-07T12:58:58Z",
                "id": "6a1e591d-8286-48fb-b820-1ccfc459fd17",
                "name": "stage-1",
                "put_on_hold_at": null,
                "started_at": "2025-03-07T12:58:41Z",
                "status": "succeeded",
                "triggered_at": "2025-03-07T12:58:39.941053Z",
                "workflows": [
                    {
                        "credit_cost": 0,
                        "depends_on": null,
                        "external_id": "ab3168cc-e071-4553-8bbe-a42a25995edc",
                        "finished_at": "2025-03-07T12:58:43Z",
                        "id": "cff18596-454b-4770-8c65-8cb5e2604b88",
                        "name": "placeholder",
                        "started_at": "2025-03-07T12:58:41Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    },
                    {
                        "credit_cost": 0,
                        "depends_on": null,
                        "external_id": "d5545537-72e7-4c8a-a793-cc46f4e6e8e8",
                        "finished_at": "2025-03-07T12:58:58Z",
                        "id": "5abb5148-f2f4-4cdf-a409-15fc64bfeebd",
                        "name": "textfile_generator",
                        "started_at": "2025-03-07T12:58:42Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    }
                ]
            },
            {
                "created_at": "2025-03-07T12:58:39.707654Z",
                "finished_at": "2025-03-07T12:59:17Z",
                "id": "7cf9c65e-33f8-48ab-b272-d52574472855",
                "name": "stage-2",
                "put_on_hold_at": null,
                "started_at": "2025-03-07T12:59:03Z",
                "status": "succeeded",
                "triggered_at": "2025-03-07T12:58:59.278648Z",
                "workflows": [
                    {
                        "credit_cost": 0,
                        "depends_on": null,
                        "external_id": "c997211e-6c44-4686-94f1-e611cc2fc4db",
                        "finished_at": "2025-03-07T12:59:17Z",
                        "id": "49c81512-c7e4-4f5c-a1e2-d74862a9acb3",
                        "name": "deployer",
                        "started_at": "2025-03-07T12:59:03Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    },
                    {
                        "credit_cost": 0,
                        "depends_on": null,
                        "external_id": "f36aed8d-bf67-461a-b1ea-d049c622e8dc",
                        "finished_at": "2025-03-07T12:59:13Z",
                        "id": "3b193471-26a4-416e-8740-9e7bcc43669b",
                        "name": "zip_archive_generator_en",
                        "started_at": "2025-03-07T12:59:03Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    },
                    {
                        "credit_cost": 0,
                        "depends_on": null,
                        "external_id": "16f5395f-d631-47f8-ba2e-fc81638115a2",
                        "finished_at": "2025-03-07T12:59:15Z",
                        "id": "40924d74-6836-4e51-b0e5-4120ea9b509e",
                        "name": "tar_archive_generator",
                        "started_at": "2025-03-07T12:59:03Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    }
                ]
            },
            {
                "created_at": "2025-03-07T12:58:39.707654Z",
                "finished_at": "2025-03-07T12:59:32Z",
                "id": "0dd0c4fc-df37-4773-918a-a2271936e532",
                "name": "stage-3",
                "put_on_hold_at": null,
                "started_at": "2025-03-07T12:59:21Z",
                "status": "succeeded",
                "triggered_at": "2025-03-07T12:59:18.367032Z",
                "workflows": [
                    {
                        "credit_cost": null,
                        "depends_on": null,
                        "external_id": "9ac955b8-d001-4789-9a56-064823538c8a",
                        "finished_at": "2025-03-07T12:59:32Z",
                        "id": "a0e5b6dd-8550-423d-b0cc-4626ba38e117",
                        "name": "zip_archive_generator_jp",
                        "started_at": "2025-03-07T12:59:21Z",
                        "status": {
                            "Name": "succeeded",
                            "StatusLevel": 5
                        }
                    }
                ]
            }
        ]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator_en,stage-3\.zip_archive_generator_jp
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiYjczNWQ5YmUtOTE0Yi00MzZmLThiNjMtZmY1ZmE1NTA3NzU1IiwKICAgICI3OGFjNjg4ZS0zYjZlLTQ0N2UtOWMxYy1lNmMzZmQ0NTA3ZWIiLAogICAgIjYwMjgxNDE3LWIyZTktNDUwZS1hZWFhLTBmMDEwN2NkMjRlMyIsCiAgICAiMmI4NTczYWQtNzU1ZC00MjlmLTlkN2YtMmMxY2QxNTY3YTUxIiwKICAgICI3YzhlMDNlZi01NGFlLTQzOTAtODE3Yi02YTFiZmFjZTkwY2QiLAogICAgImE5ZmQyYjI0LWRkYzItNDNjMC05ZTMyLWM5ZGViNWU2NmQwYSIKICBdLAogICJwaXBlbGluZV9pZCI6IFsKICAgICJhYTAwY2YwNi01ZTNhLTQ1ZTAtYWExNC1iNDU0NzFjZTZhNjAiCiAgXQp9" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
