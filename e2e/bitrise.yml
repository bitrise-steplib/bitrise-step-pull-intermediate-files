format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
        [{
            "id": "b3562352-8be1-404b-bd80-464e8528dc7b",
            "name": "stage-1",
            "workflows": [{
                "credit_cost": 2,
                "external_id": "65aad896-2c52-4947-8781-26c1210043ac",
                "finished_at": "2022-11-25T08:40:09Z",
                "id": "076fb94d-6f1d-44f2-9e92-cbc9c73812a3",
                "name": "placeholder",
                "started_at": "2022-11-25T08:40:07Z",
                "status": "succeeded"
            }, {
                "credit_cost": 2,
                "external_id": "646b36c3-324b-4f08-a607-a491ecf041e9",
                "finished_at": "2022-11-25T08:40:17Z",
                "id": "70642fc8-cc2c-4809-8a95-f10a893625f8",
                "name": "textfile_generator",
                "started_at": "2022-11-25T08:40:06Z",
                "status": "succeeded"
            }]
        }, {
            "id": "d11e8056-6d00-4ad7-9cfe-a4cd304e2800",
            "name": "stage-2",
            "workflows": [{
                "credit_cost": null,
                "external_id": "71fbb643-8237-4d55-abf8-2eef1553e0c9",
                "finished_at": "2022-11-25T08:40:38Z",
                "id": "5c36785b-ccba-4c87-a96d-9162d22149fa",
                "name": "deployer",
                "started_at": "2022-11-25T08:40:20Z",
                "status": "succeeded"
            }, {
                "credit_cost": 2,
                "external_id": "e0c99fa6-ffe1-4b5d-8b74-498c0b791c6e",
                "finished_at": "2022-11-25T08:40:36Z",
                "id": "290f54ba-d8d5-417e-9a9b-b723a3c5132e",
                "name": "zip_archive_generator",
                "started_at": "2022-11-25T08:40:22Z",
                "status": "succeeded"
            }, {
                "credit_cost": null,
                "external_id": "db1be3dd-167c-440c-b87e-93e2f0cee445",
                "finished_at": "2022-11-25T08:40:37Z",
                "id": "c7d9adab-9378-49b5-b370-2358d490be30",
                "name": "tar_archive_generator",
                "started_at": "2022-11-25T08:40:22Z",
                "status": "succeeded"
            }]
        }]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiNjVhYWQ4OTYtMmM1Mi00OTQ3LTg3ODEtMjZjMTIxMDA0M2FjIiwKICAgICI2NDZiMzZjMy0zMjRiLTRmMDgtYTYwNy1hNDkxZWNmMDQxZTkiLAogICAgIjcxZmJiNjQzLTgyMzctNGQ1NS1hYmY4LTJlZWYxNTUzZTBjOSIsCiAgICAiZTBjOTlmYTYtZmZlMS00YjVkLThiNzQtNDk4YzBiNzkxYzZlIiwKICAgICJkYjFiZTNkZC0xNjdjLTQ0MGMtYjg3ZS05M2UyZjBjZWU0NDUiCiAgXSwKICAicGlwZWxpbmVfaWQiOiBbCiAgICAiMTZlZTg4MGQtYjBlNS00ZTAxLWE4NzYtNDMzOTk1YWQ2N2MxIgogIF0KfQo=" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
