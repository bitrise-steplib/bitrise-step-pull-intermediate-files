format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
        [
          {
              "created_at": "2024-07-31T13:14:35.14177Z",
              "finished_at": "2024-07-31T13:16:39Z",
              "id": "4c295169-305d-4180-b482-ceed6a339d2b",
              "name": "stage-1",
              "put_on_hold_at": null,
              "started_at": "2024-07-31T13:16:16Z",
              "status": "succeeded",
              "triggered_at": "2024-07-31T13:14:35.530819Z",
              "workflows": [
                  {
                      "credit_cost": 0,
                      "depends_on": null,
                      "external_id": "b735d9be-914b-436f-8b63-ff5fa5507755",
                      "finished_at": "2024-07-31T13:16:21Z",
                      "id": "4f86b3f4-d3d0-43b5-855e-a1706c8c85db",
                      "name": "placeholder",
                      "started_at": "2024-07-31T13:16:17Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  },
                  {
                      "credit_cost": 0,
                      "depends_on": null,
                      "external_id": "78ac688e-3b6e-447e-9c1c-e6c3fd4507eb",
                      "finished_at": "2024-07-31T13:16:39Z",
                      "id": "a07a2fc3-0a1c-4900-96a5-1390332ae6fa",
                      "name": "textfile_generator",
                      "started_at": "2024-07-31T13:16:16Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  }
              ]
          },
          {
              "created_at": "2024-07-31T13:14:35.14177Z",
              "finished_at": "2024-07-31T13:19:00Z",
              "id": "3879c626-46b0-4cfa-9b03-6cca88c4a63c",
              "name": "stage-2",
              "put_on_hold_at": null,
              "started_at": "2024-07-31T13:17:35Z",
              "status": "succeeded",
              "triggered_at": "2024-07-31T13:16:40.603772Z",
              "workflows": [
                  {
                      "credit_cost": 0,
                      "depends_on": null,
                      "external_id": "60281417-b2e9-450e-aeaa-0f0107cd24e3",
                      "finished_at": "2024-07-31T13:18:05Z",
                      "id": "15f6090c-f217-4a0c-b56f-60614ba35397",
                      "name": "deployer",
                      "started_at": "2024-07-31T13:17:40Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  },
                  {
                      "credit_cost": 0,
                      "depends_on": null,
                      "external_id": "2b8573ad-755d-429f-9d7f-2c1cd1567a51",
                      "finished_at": "2024-07-31T13:19:00Z",
                      "id": "16e56b2b-9ba0-4476-a525-5c37fd3df828",
                      "name": "zip_archive_generator_en",
                      "started_at": "2024-07-31T13:18:37Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  },
                  {
                      "credit_cost": 0,
                      "depends_on": null,
                      "external_id": "7c8e03ef-54ae-4390-817b-6a1bface90cd",
                      "finished_at": "2024-07-31T13:17:57Z",
                      "id": "40aa1e3c-661d-4a88-bec2-d5b3ca3f7275",
                      "name": "tar_archive_generator",
                      "started_at": "2024-07-31T13:17:35Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  }
              ]
          },
          {
              "created_at": "2024-07-31T13:14:35.14177Z",
              "finished_at": "2024-07-31T13:20:41Z",
              "id": "17d45b68-8f03-4be6-8207-3d7067f65a6b",
              "name": "stage-3",
              "put_on_hold_at": null,
              "started_at": "2024-07-31T13:20:18Z",
              "status": "succeeded",
              "triggered_at": "2024-07-31T13:19:01.067166Z",
              "workflows": [
                  {
                      "credit_cost": null,
                      "depends_on": null,
                      "external_id": "a9fd2b24-ddc2-43c0-9e32-c9deb5e66d0a",
                      "finished_at": "2024-07-31T13:20:41Z",
                      "id": "bbc99d82-881a-46fc-8a9e-1af1a5b9fd6d",
                      "name": "zip_archive_generator_jp",
                      "started_at": "2024-07-31T13:20:18Z",
                      "status": {
                          "Name": "succeeded",
                          "StatusLevel": 5
                      }
                  }
              ]
          }
        ]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator_en,stage-3\.zip_archive_generator_jp
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiYjczNWQ5YmUtOTE0Yi00MzZmLThiNjMtZmY1ZmE1NTA3NzU1IiwKICAgICI3OGFjNjg4ZS0zYjZlLTQ0N2UtOWMxYy1lNmMzZmQ0NTA3ZWIiLAogICAgIjYwMjgxNDE3LWIyZTktNDUwZS1hZWFhLTBmMDEwN2NkMjRlMyIsCiAgICAiMmI4NTczYWQtNzU1ZC00MjlmLTlkN2YtMmMxY2QxNTY3YTUxIiwKICAgICI3YzhlMDNlZi01NGFlLTQzOTAtODE3Yi02YTFiZmFjZTkwY2QiLAogICAgImE5ZmQyYjI0LWRkYzItNDNjMC05ZTMyLWM5ZGViNWU2NmQwYSIKICBdLAogICJwaXBlbGluZV9pZCI6IFsKICAgICJhYTAwY2YwNi01ZTNhLTQ1ZTAtYWExNC1iNDU0NzFjZTZhNjAiCiAgXQp9" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
