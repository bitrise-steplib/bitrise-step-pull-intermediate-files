format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
        [
          {
              "created_at": "2023-03-21T14:47:33.298887Z",
              "finished_at": "2023-03-21T14:47:54Z",
              "id": "045e5bf7-e5ee-474a-9115-19c3f98374c5",
              "name": "stage-1",
              "put_on_hold_at": null,
              "started_at": "2023-03-21T14:47:34Z",
              "status": "succeeded",
              "triggered_at": "2023-03-21T14:47:33.729235Z",
              "workflows": [
                  {
                      "credit_cost": 2,
                      "external_id": "5d904190-b261-426a-b656-68c701ec0d23",
                      "finished_at": "2023-03-21T14:47:46Z",
                      "id": "fd6391bd-d5d2-4330-800d-3ed39e1b5150",
                      "name": "placeholder",
                      "started_at": "2023-03-21T14:47:36Z",
                      "status": "succeeded"
                  },
                  {
                      "credit_cost": 2,
                      "external_id": "9c20fda1-c0cc-400b-9fc2-2672fe226f2a",
                      "finished_at": "2023-03-21T14:47:54Z",
                      "id": "51f318e7-eed2-4ad9-b73c-e3aef2d0a2c4",
                      "name": "textfile_generator",
                      "started_at": "2023-03-21T14:47:34Z",
                      "status": "succeeded"
                  }
              ]
          },
          {
              "created_at": "2023-03-21T14:47:33.298887Z",
              "finished_at": "2023-03-21T14:48:23Z",
              "id": "bc0f29d7-e4b6-4769-b9de-bd1a8822dbe4",
              "name": "stage-2",
              "put_on_hold_at": null,
              "started_at": "2023-03-21T14:47:57Z",
              "status": "succeeded",
              "triggered_at": "2023-03-21T14:47:55.678992Z",
              "workflows": [
                  {
                      "credit_cost": 2,
                      "external_id": "3633035f-54bc-4553-afc9-684d98515542",
                      "finished_at": "2023-03-21T14:48:23Z",
                      "id": "4b395bf0-1f01-4378-ab95-8a26b9f75d89",
                      "name": "deployer",
                      "started_at": "2023-03-21T14:47:58Z",
                      "status": "succeeded"
                  },
                  {
                      "credit_cost": 2,
                      "external_id": "41f68e93-4ae7-433c-9b4c-640af2907906",
                      "finished_at": "2023-03-21T14:48:22Z",
                      "id": "e6dc8872-f815-46a1-a65f-1329ef9d9dfb",
                      "name": "zip_archive_generator_en",
                      "started_at": "2023-03-21T14:47:57Z",
                      "status": "succeeded"
                  },
                  {
                      "credit_cost": 2,
                      "external_id": "732b7f2c-4180-4474-916b-1f1b4ca44d32",
                      "finished_at": "2023-03-21T14:48:15Z",
                      "id": "fc233177-c7b6-46da-93ad-39718827f048",
                      "name": "tar_archive_generator",
                      "started_at": "2023-03-21T14:47:57Z",
                      "status": "succeeded"
                  }
              ]
          },
          {
              "created_at": "2023-03-21T14:47:33.298887Z",
              "finished_at": "2023-03-21T14:48:55Z",
              "id": "a3b58152-fc21-46a7-b615-556b29eaee3d",
              "name": "stage-3",
              "put_on_hold_at": null,
              "started_at": "2023-03-21T14:48:28Z",
              "status": "succeeded",
              "triggered_at": "2023-03-21T14:48:24.9728Z",
              "workflows": [
                  {
                      "credit_cost": null,
                      "external_id": "69a37d40-f24e-4e93-ab2f-a94ffd4439ba",
                      "finished_at": "2023-03-21T14:48:55Z",
                      "id": "ed998752-9cb8-49e2-bb1c-589b933c4b9b",
                      "name": "zip_archive_generator_jp",
                      "started_at": "2023-03-21T14:48:28Z",
                      "status": "succeeded"
                  }
              ]
          }
        ]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator_en,stage-3\.zip_archive_generator_jp
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi
            actual=$(cat hello_world.txt)
            expected="Hello 世界!"
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiNWQ5MDQxOTAtYjI2MS00MjZhLWI2NTYtNjhjNzAxZWMwZDIzIiwKICAgICI5YzIwZmRhMS1jMGNjLTQwMGItOWZjMi0yNjcyZmUyMjZmMmEiLAogICAgIjM2MzMwMzVmLTU0YmMtNDU1My1hZmM5LTY4NGQ5ODUxNTU0MiIsCiAgICAiNDFmNjhlOTMtNGFlNy00MzNjLTliNGMtNjQwYWYyOTA3OTA2IiwKICAgICI3MzJiN2YyYy00MTgwLTQ0NzQtOTE2Yi0xZjFiNGNhNDRkMzIiLAogICAgIjY5YTM3ZDQwLWYyNGUtNGU5My1hYjJmLWE5NGZmZDQ0MzliYSIKICBdLAogICJwaXBlbGluZV9pZCI6IFsKICAgICI0OWJhNmU5YS1iODNlLTQzYTMtYjc3MS1lNDdhMjhmNDM4ODYiCiAgXQp9" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
