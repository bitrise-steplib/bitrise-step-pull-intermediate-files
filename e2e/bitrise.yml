format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
      [
        {
          "created_at": "2023-03-21T14:06:15.37761Z",
          "finished_at": "2023-03-21T14:06:38Z",
          "id": "7735fa76-35c3-47a4-80d5-bfe9e4ad7187",
          "name": "stage-1",
          "put_on_hold_at": null,
          "started_at": "2023-03-21T14:06:16Z",
          "status": "succeeded",
          "triggered_at": "2023-03-21T14:06:15.827283Z",
          "workflows": [
            {
              "credit_cost": 2,
              "external_id": "f48f9776-65f3-462c-860c-2331e012d3fe",
              "finished_at": "2023-03-21T14:06:34Z",
              "id": "ba3e65fb-b70f-410b-94bc-029b847c2c71",
              "name": "placeholder",
              "started_at": "2023-03-21T14:06:17Z",
              "status": "succeeded"
            },
            {
              "credit_cost": 2,
              "external_id": "86edd622-9eba-4946-94ea-63e6d31def5a",
              "finished_at": "2023-03-21T14:06:38Z",
              "id": "ef4ba9c9-a21e-4a51-a2d3-97f166f677eb",
              "name": "textfile_generator",
              "started_at": "2023-03-21T14:06:16Z",
              "status": "succeeded"
            }
          ]
        },
        {
          "created_at": "2023-03-21T14:06:15.37761Z",
          "finished_at": "2023-03-21T14:07:43Z",
          "id": "0644d087-f5cd-440e-841e-c7d9e2b04c6f",
          "name": "stage-2",
          "put_on_hold_at": null,
          "started_at": "2023-03-21T14:06:40Z",
          "status": "succeeded",
          "triggered_at": "2023-03-21T14:06:39.067834Z",
          "workflows": [
            {
              "credit_cost": 2,
              "external_id": "1de017dc-1f82-40ab-babc-e0f046f97f2d",
              "finished_at": "2023-03-21T14:07:43Z",
              "id": "3aefc75d-9395-4077-b2ef-ee841c3f74c8",
              "name": "deployer",
              "started_at": "2023-03-21T14:07:19Z",
              "status": "succeeded"
            },
            {
              "credit_cost": 2,
              "external_id": "d85dfcaf-06e6-4a77-b341-61f5e3c5e023",
              "finished_at": "2023-03-21T14:06:59Z",
              "id": "67c9a8b1-8de4-49fd-b1ca-b63e464afe0a",
              "name": "zip_archive_generator_en",
              "started_at": "2023-03-21T14:06:40Z",
              "status": "succeeded"
            },
            {
              "credit_cost": 2,
              "external_id": "6a25740d-cbe7-4d6a-9066-e58c89ce7ebd",
              "finished_at": "2023-03-21T14:07:02Z",
              "id": "4686a8ff-afd1-440b-a730-200686b84714",
              "name": "tar_archive_generator",
              "started_at": "2023-03-21T14:06:41Z",
              "status": "succeeded"
            }
          ]
        },
        {
          "created_at": "2023-03-21T14:06:15.37761Z",
          "finished_at": "2023-03-21T14:08:36Z",
          "id": "7221f8db-d0d7-4edf-ab2c-50f7ddc2a7c4",
          "name": "stage-3",
          "put_on_hold_at": null,
          "started_at": "2023-03-21T14:08:17Z",
          "status": "succeeded",
          "triggered_at": "2023-03-21T14:07:45.030895Z",
          "workflows": [
            {
              "credit_cost": null,
              "external_id": "6951fc62-9477-4be3-abc0-754d7b8c318b",
              "finished_at": "2023-03-21T14:08:36Z",
              "id": "3f9dbc4a-4357-4f6f-8db5-fb473419eaaf",
              "name": "zip_archive_generator_jp",
              "started_at": "2023-03-21T14:08:17Z",
              "status": "succeeded"
            }
          ]
        }
      ]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator_en,stage-3\.zip_archive_generator_jp
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi
            actual=$(cat hello_world.txt)
            expected="Hello 世界!"
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiZjQ4Zjk3NzYtNjVmMy00NjJjLTg2MGMtMjMzMWUwMTJkM2ZlIiwKICAgICI4NmVkZDYyMi05ZWJhLTQ5NDYtOTRlYS02M2U2ZDMxZGVmNWEiLAogICAgIjFkZTAxN2RjLTFmODItNDBhYi1iYWJjLWUwZjA0NmY5N2YyZCIsCiAgICAiZDg1ZGZjYWYtMDZlNi00YTc3LWIzNDEtNjFmNWUzYzVlMDIzIiwKICAgICI2YTI1NzQwZC1jYmU3LTRkNmEtOTA2Ni1lNThjODljZTdlYmQiLAogICAgIjY5NTFmYzYyLTk0NzctNGJlMy1hYmMwLTc1NGQ3YjhjMzE4YiIKICBdLAogICJwaXBlbGluZV9pZCI6IFsKICAgICJjY2Q1YTIxMC0zYWI1LTQ2YTYtYTM1Yy02ZWFjMzUxZjBlNDAiCiAgXQp9" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
