format_version: "11"
default_step_lib_source: https://github.com/bitrise-io/bitrise-steplib.git

app:
  envs:
  # Shared envs for every test workflow
  - BITRISEIO_FINISHED_STAGES: |-
      [{
          "id": "ea0c53ce-25e4-41f8-a3ab-8466cdb3f75b",
          "name": "stage-1",
          "workflows": [{
              "credit_cost": 2,
              "external_id": "c07c4fb1-631d-471a-bfa7-44b32e62b6ec",
              "finished_at": "2023-02-16T08:35:34Z",
              "id": "3ae1a7ab-e263-4619-9f10-9446665933bd",
              "name": "placeholder",
              "started_at": "2023-02-16T08:35:21Z",
              "status": "succeeded"
          }, {
              "credit_cost": 2,
              "external_id": "0fb57a0d-5b8b-4da5-86fa-4d3fd9a168b3",
              "finished_at": "2023-02-16T08:35:48Z",
              "id": "4e9e5e87-5acd-4137-a489-de0b727ba4c7",
              "name": "textfile_generator",
              "started_at": "2023-02-16T08:35:20Z",
              "status": "succeeded"
          }]
      }, {
          "id": "37a14bc4-1416-4402-b853-2b25bfa351a7",
          "name": "stage-2",
          "workflows": [{
              "credit_cost": null,
              "external_id": "2d16d16c-931e-4ef8-83b1-7679fe045836",
              "finished_at": "2023-02-16T08:36:23Z",
              "id": "27f1cbf6-f005-4909-80c2-32da286b5bd8",
              "name": "deployer",
              "started_at": "2023-02-16T08:35:52Z",
              "status": "succeeded"
          }, {
              "credit_cost": 2,
              "external_id": "5fede64d-9c4e-4f2f-87c5-168131292876",
              "finished_at": "2023-02-16T08:36:16Z",
              "id": "3cf4eb11-64e6-4e86-9aff-dc58105f2b25",
              "name": "zip_archive_generator",
              "started_at": "2023-02-16T08:35:53Z",
              "status": "succeeded"
          }, {
              "credit_cost": 2,
              "external_id": "76827c10-5d95-4c08-ae18-8a63c988b37c",
              "finished_at": "2023-02-16T08:36:19Z",
              "id": "46318238-4326-4b85-9bd9-059c9a7e6d81",
              "name": "tar_archive_generator",
              "started_at": "2023-02-16T08:35:53Z",
              "status": "succeeded"
          }]
      }]
  - BITRISE_APP_SLUG: b520099804d7e71a
  - BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET: $BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET

workflows:
  test_download_tar_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.tar_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_TAR
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_TAR
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_zip_archive:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-2\.zip_archive_generator
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            ARCHIVE_LAYOUT
        - dirs: |-
            ARCHIVE_ZIP
    - script:
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            cd $ARCHIVE_ZIP
            actual=$(tree -L 1 --noreport .)
            expected=$(cat $ARCHIVE_LAYOUT)
            if [ "$actual" != "$expected" ]; then
              echo "actual:\n$actual"
              echo
              echo "expected:\n$expected"
              exit 1
            fi

  test_download_all_artifacts_of_build:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: .*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            EXAMPLE_CSV
            EXPORT_OPTIONS_PLIST
            TEST_JSON
            TEXT_FILE_TXT
        - dirs: |-
            ARCHIVE_ZIP

  test_download_specific_stage_artifacts:
    before_run:
    - _setup
    - _cleanup
    steps:
    - path::./:
        title: Execute step
        inputs:
        - verbose: true
        - artifact_sources: stage-1\..*
        - bitrise_api_base_url: https://api.bitrise.io
    - git::https://github.com/bitrise-steplib/bitrise-step-check-step-outputs.git@main:
        title: Validate downloaded artifacts
        is_always_run: true
        inputs:
        - files: |-
            TEXT_FILE_TXT

  _cleanup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            envman unset --key EXAMPLE_CSV
            envman unset --key EXPORT_OPTIONS_PLIST
            envman unset --key TEST_JSON
            envman unset --key TEXT_FILE_TXT

  _setup:
    steps:
    - script:
        title: Get access token
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex

            json_response=$(curl --fail -X POST https://auth.services.bitrise.io/auth/realms/bitrise-services/protocol/openid-connect/token -k \
                --data "client_id=artifact-pull" \
                --data "client_secret=$BITRISE_AUTH_SERVICE_ARTIFACT_PULL_CLIENT_SECRET" \
                --data "grant_type=urn:ietf:params:oauth:grant-type:uma-ticket" \
                --data "scope=build_artifact:read build:read app:read" \
                --data "claim_token=ewogICJidWlsZF9pZHMiOiBbCiAgICAiYzA3YzRmYjEtNjMxZC00NzFhLWJmYTctNDRiMzJlNjJiNmVjIiwKICAgICIwZmI1N2EwZC01YjhiLTRkYTUtODZmYS00ZDNmZDlhMTY4YjMiLAogICAgIjJkMTZkMTZjLTkzMWUtNGVmOC04M2IxLTc2NzlmZTA0NTgzNiIsCiAgICAiNWZlZGU2NGQtOWM0ZS00ZjJmLTg3YzUtMTY4MTMxMjkyODc2IiwKICAgICI3NjgyN2MxMC01ZDk1LTRjMDgtYWUxOC04YTYzYzk4OGIzN2MiCiAgXSwKICAicGlwZWxpbmVfaWQiOiBbCiAgICAiNGM4MGVjNzQtMDdjZC00ZmIyLWIxZDEtMDgzMDkzYTNlYTBlIgogIF0KfQo=" \
                --data "claim_token_format=urn:ietf:params:oauth:token-type:jwt" \
                --data "audience=bitrise-api")

            auth_token=$(echo $json_response | jq -r .access_token)

            envman add --key BITRISEIO_ARTIFACT_PULL_TOKEN --value $auth_token

    - script:
        title: Clean _tmp folder
        inputs:
        - content: |-
            #!/bin/env bash
            set -ex
            rm -rf ./_artifact_pull
